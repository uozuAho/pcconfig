// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "ctrl+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "f11",
        "command": "editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "f10",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.tasks.build"
    },
    {
        "key": "ctrl+shift+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+e",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "ctrl+shift+l",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.action.files.saveAll"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.openLink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+space",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    // vim-like cursor control. I remap caps lock to ctrl
    {
        "key": "ctrl+j",
        "command": "cursorLeft"
    },
    {
        "key": "ctrl+shift+j",
        "command": "cursorLeftSelect"
    },
    {
        "key": "ctrl+k",
        "command": "cursorDown",
    },
    {
        "key": "ctrl+shift+k",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "cursorUp",
    },
    {
        "key": "ctrl+shift+l",
        "command": "cursorUpSelect",
    },
    {
        "key": "ctrl+;",
        "command": "cursorRight",
    },
    {
        "key": "ctrl+;",
        "command": "cursorRight",
    },
    {
        "key": "ctrl+shift+;",
        "command": "cursorRightSelect",
    },
    {
        "key": "ctrl+i",
        "command": "cursorEnd",
        "when": "textInputFocus",
        "args": {
            "sticky": false
        }
    },
    {
        "key": "ctrl+shift+i",
        "command": "cursorEndSelect",
        "when": "textInputFocus",
        "args": {
            "sticky": false
        }
    },
    {
        "key": "ctrl+u",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+u",
        "command": "cursorHomeSelect",
        "when": "textInputFocus"
    },
]